version: '3.0'

services:

  frog-db:
    image: postgres:10.1
    container_name: artifactory-db
    ports:
      - "5432"
    environment:
      - POSTGRES_DB=artifactory
      # The following must match the DB_USER and DB_PASSWORD values passed to Artifactory
      - POSTGRES_USER=artifactory
      - POSTGRES_PASSWORD=artifactory
    volumes:
      - frog-db:/var/lib/postgresql/data
    restart: unless-stopped

  sonar-db:
    image: postgres:10.1
    container_name: sonarqube-db
    ports:
      - "5432"
    environment:
      - POSTGRES_DB=sonar
      # The following must match the SONARQUBE_JDBC_USERNAME and SONARQUBE_JDBC_PASSWORD values passed to SonarQube
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - sonar-db:/var/lib/postgresql/data
    restart: unless-stopped

  artifactory:
    image: docker.bintray.io/jfrog/artifactory-oss:5.8.3
    container_name: artifactory
    ports:
      - "8081"
    depends_on:
      - frog-db
    links:
      - frog-db:postgresql
    volumes:
      - artifactory:/var/opt/jfrog/artifactory
    environment:
      - DB_TYPE=postgresql
      # The following must match the POSTGRES_USER and POSTGRES_PASSWORD values passed to frog-db
      - DB_USER=artifactory
      - DB_PASSWORD=artifactory
      # Add extra Java options by uncommenting the following line
      #- EXTRA_JAVA_OPTIONS=-Xmx4g
      - VIRTUAL_HOST=${ARTIFACTORY_HOST}
      - VIRTUAL_PORT=8081
      - HTTPS_METHOD=nohttp
      - SSL_POLICY=Mozilla-Modern
      - LETSENCRYPT_HOST=${ARTIFACTORY_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL_RECIPIENT}
    restart: always

  sonarqube:
    image: sonarqube:lts-alpine
    container_name: sonarqube
    ports:
      - "9000"
      - "9092"
    depends_on:
      - sonar-db
    links:
      - sonar-db
    volumes:
      - sonarqube:/var/lib/sonarqube/data
    restart: always
    environment:
      # The following must match the POSTGRES_USER and POSTGRES_PASSWORD values passed to frog-db
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
      - SONARQUBE_JDBC_URL=jdbc:postgresql://sonar-db:5432/sonar
      - VIRTUAL_HOST=${SONARQUBE_HOST}
      - VIRTUAL_PORT=9000
      - HTTPS_METHOD=nohttp
      - SSL_POLICY=Mozilla-Modern
      - LETSENCRYPT_HOST=${SONARQUBE_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL_RECIPIENT}
    restart: always

  jenkins-master:
    build: master
    container_name: jenkins-master
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - jenkins:/var/jenkins_home
      - jenkins:/etc/ansible
    ports:
      - "8080"
      - "50000"
    links:
      - jenkins-slave
    environment:
      - VIRTUAL_HOST=${JENKINS_HOST}
      - VIRTUAL_PORT=8080
      - HTTPS_METHOD=nohttp
      - SSL_POLICY=Mozilla-Modern
      - LETSENCRYPT_HOST=${JENKINS_HOST}
      - LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL_RECIPIENT}

  jenkins-slave:
    build: slave
    container_name: jenkins-slave
    ports:
      - "22"
    env_file:
      - ./slave.env
    links:
      - artifactory
      - sonarqube
    restart: always

networks:
  default:
    external:
      name: ${SERVICE_NETWORK:-webproxy}
      
volumes:
  jenkins:
  sonarqube:
  sonar-db:
  artifactory:
  frog-db:
